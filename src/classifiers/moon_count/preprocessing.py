import numpy as np
import cv2

lut = np.asarray([
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14,
    17, 19, 21, 23, 25, 27, 29, 31, 34, 36, 38, 40, 42, 44, 46, 48, 51, 53, 55, 57, 59, 61, 63, 65, 68, 70, 72, 74, 76,
    78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 116, 119, 121, 123, 125, 127, 129,
    131, 133, 136, 138, 140, 142, 144, 146, 148, 150, 153, 155, 157, 159, 161, 163, 165, 167, 170, 172, 174, 176, 178,
    180, 182, 184, 187, 189, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 212, 214, 216, 218, 221, 223, 225, 227,
    229, 231, 233, 235, 238, 240, 242, 244, 246, 248, 250, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255,
])


def preprocess(image):
    out_images = np.zeros((20, 3, 23, 12))
    for j in range(2):
        for i in range(10):
            # Calculate crop coordinates
            x = 22 + int(i * 11.5) + i % 2 + j
            y = 61 - int(i * 0.78) + int(j * 18)
            w = 12
            h = 23
            # Crop
            crop_image = image[y:y + h, x:x + w]
            # Invert color
            crop_image = 255 - crop_image
            # Apply LUT
            crop_image = cv2.LUT(crop_image, lut).astype('uint8')

            # Rescale 0-255 to 0-1
            crop_image = crop_image / 255
            # Rearrange array dimensions (23, 12, 1) to (1, 23, 12)
            crop_image = crop_image.transpose((2, 0, 1))
            # Insert into output array
            out_images[j * 10 + i, :] = crop_image

    return out_images
